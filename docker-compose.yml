version: '3.8'

services:
    api:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: api
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        environment:
            - REDIS_HOST=redis
        networks:
            - api-network
        healthcheck:
            test: [ "CMD", "php", "artisan", "queue:work", "--once" ]
            interval: 30s
            timeout: 10s
            retries: 3

    webserver:
        image: nginx:1.25-alpine
        container_name: webserver
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - api-network
        depends_on:
            - api

    db:
        image: mysql:8.0.33
        container_name: db
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        networks:
            - api-network
        command: --default-authentication-plugin=mysql_native_password

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        ports:
            - "8081:80"
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_ARBITRARY: 0
            UPLOAD_LIMIT: 128M
        networks:
            - api-network
        depends_on:
            - db

networks:
    api-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
